name: ci

# TODO: deduplicate this across multiple workflow files.
on:
  push:
    branches:
      - '*'

    paths-ignore:
      - README.md

  # Run tests for any PRs.
  pull_request:
    branches:
      - master

    paths-ignore:
      - README.md

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    if: >
      (github.event_name == 'push' &&
       !contains(github.event.head_commit.message, 'skip ci') &&
       !contains(github.event.head_commit.message, 'ci skip')) ||
      github.event_name == 'pull_request'
    strategy:
      # To avoid terminating all jobs when one job fails.
      fail-fast: false
      matrix:
        include:
          # ---------------------------------------------------------------------------------------
          # CentOS 7
          # ---------------------------------------------------------------------------------------
          - name: centos7-x86_64-gcc9
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_centos7:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --devtoolset=9
              --expected-major-compiler-version=9

          - name: centos7-x86_64-clang11
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_centos7:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm11
              --expected-major-compiler-version=11

          - name: centos7-x86_64-clang12
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_centos7:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm12
              --expected-major-compiler-version=12

          - name: centos7-x86_64-clang13
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_centos7:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm13
              --expected-major-compiler-version=13

          # ---------------------------------------------------------------------------------------
          # Ubuntu 18.04
          # ---------------------------------------------------------------------------------------

          - name: ubuntu1804-x86_64-gcc8
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_ubuntu1804:v2021-08-27T03_10_20
            build_thirdparty_args: >-
              --compiler-prefix=/usr
              --single-compiler-type=gcc
              --compiler-suffix=-8
              --expected-major-compiler-version=8

          - name: ubuntu1804-x86_64-clang11
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_ubuntu1804:v2021-08-27T03_10_20
            build_thirdparty_args: >-
              --single-compiler-type=clang
              --compiler-prefix=/usr
              --compiler-suffix=-11
              --expected-major-compiler-version=11

          # ---------------------------------------------------------------------------------------
          # Ubuntu 20.04
          # ---------------------------------------------------------------------------------------

          - name: ubuntu2004-x86_64-gcc9
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_ubuntu2004:v2021-08-27T03_10_20
            build_thirdparty_args: >-
              --compiler-prefix=/usr
              --single-compiler-type=gcc
              --compiler-suffix=-9
              --expected-major-compiler-version=9

          - name: ubuntu2004-x86_64-clang11
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_ubuntu2004:v2021-08-27T03_10_20
            build_thirdparty_args: >-
              --compiler-prefix=/usr
              --single-compiler-type=clang
              --compiler-suffix=-11
              --expected-major-compiler-version=11

          # ---------------------------------------------------------------------------------------
          # AlmaLinux 8
          # ---------------------------------------------------------------------------------------

          - name: almalinux8-x86_64-gcc9
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --single-compiler-type=gcc
              --devtoolset=9
              --expected-major-compiler-version=9

          # Clang/LLVM 12

          - name: almalinux8-x86_64-clang12
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm12
              --expected-major-compiler-version=12

          - name: almalinux8-x86_64-clang12-thin-lto
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm12
              --expected-major-compiler-version=12
              --lto=thin

          - name: almalinux8-x86_64-clang12-full-lto
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm12
              --expected-major-compiler-version=12
              --lto=full

          - name: almalinux8-x86_64-clang12-linuxbrew
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm12_linuxbrew
              --expected-major-compiler-version=12

          - name: almalinux8-x86_64-clang12-linuxbrew-thin-lto
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm12_linuxbrew
              --expected-major-compiler-version=12
              --lto=thin

          - name: almalinux8-x86_64-clang12-linuxbrew-full-lto
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm12_linuxbrew
              --expected-major-compiler-version=12
              --lto=full

          # Clang/LLVM 13
          - name: almalinux8-x86_64-clang13
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm13
              --expected-major-compiler-version=13

          - name: almalinux8-x86_64-clang13-thin-lto
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm13
              --expected-major-compiler-version=13
              --lto=thin

          - name: almalinux8-x86_64-clang13-full-lto
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm13
              --expected-major-compiler-version=13
              --lto=full

          - name: almalinux8-x86_64-clang13-linuxbrew
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm13_linuxbrew
              --expected-major-compiler-version=13

          - name: almalinux8-x86_64-clang13-linuxbrew-thin-lto
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm13_linuxbrew
              --expected-major-compiler-version=13
              --lto=thin

          - name: almalinux8-x86_64-clang13-linuxbrew-full-lto
            os: ubuntu-20.04  # Ubuntu 20.04 is for the top-level VM only. We use Docker in it.
            docker_image: yugabyteci/yb_build_infra_almalinux8:v2021-08-27T03_10_19
            build_thirdparty_args: >-
              --toolchain=llvm13_linuxbrew
              --expected-major-compiler-version=13
              --lto=full

          # ---------------------------------------------------------------------------------------
          # macOS
          # ---------------------------------------------------------------------------------------

          - name: macos-x86_64
            os: macos-10.15
            docker_image:
            build_thirdparty_args:

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          # We need to fetch all history because we are cloning the checkout directory further
          # in test code.
          fetch-depth: 0

      - name: Build
        run: |
          if [[ $OSTYPE == darwin* ]]; then
            ./.github/workflows/macos_build.sh
          else
            ./.github/workflows/linux_build.sh
          fi
        env:
          YB_DOCKER_IMAGE: ${{ matrix.docker_image }}
          YB_THIRDPARTY_ARCHIVE_NAME_SUFFIX: ${{ matrix.name }}
          YB_BUILD_THIRDPARTY_ARGS: ${{ matrix.build_thirdparty_args }}
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: yugabyte-db-thirdparty-${{ matrix.name }}.tar.gz
          path: archive.tar.gz

      - uses: actions/upload-artifact@v2
        with:
          name: yugabyte-db-thirdparty-${{ matrix.name }}.tar.gz.sha256
          path: archive.tar.gz.sha256
